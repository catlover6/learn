
class stack:
    def __init__(self):
        self.top = []

    def isEmpty(self):
        return len(self.top)==0

    def push(self,item):
        self.top.append(item)

    def pop(self):
        if not self.isEmpty():
            return self.top.pop(-1)

    def peek(self):
        if not self.isEmpty():
            return self.top[-1]

    def size(self): return len(self.top)

    def clear(self):
        top = []

    def show(self):
        print(self.top)

def evalPostfix(expr):
    s = stack()
    for token in expr:
        if token in "+-*/":
            val2 = s.pop()
            val1 = s.pop()
            if(token =='+'):s.push(val1+val2)
            elif(token =='-'):s.push(val1-val2)
            elif (token =='*'): s.push(val1*val2)
            elif(token =='/'):s.push(val1/val2)
        else:
            s.push(float(token))

    return s.pop()

expr1 = ['8','2','/','3','-','3','2','*','+']
print(evalPostfix(expr1))
